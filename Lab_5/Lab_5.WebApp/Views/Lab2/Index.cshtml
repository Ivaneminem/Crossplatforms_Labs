@{
    ViewData["Title"] = "Lab 2";
}

<h2>Lab 2: Завдання</h2>
<p>
    Виріб виготовляють із n блоків, кожен з яких має два технологічні параметри – mi та ki. Відомо, що ki=mi+1, i=1, 2, …, n-1. При цій умові два послідовні блоки i та i+1 можна об'єднувати в один новий, який матиме технологічні параметри - mi та ki+1, і на це буде потрібно miki+1 технологічних операцій. Новий блок можна знову поєднувати з одним із сусідніх і так далі. Змінюючи порядок збирання блоків можна домогтися зменшення кількості технологічних операцій. Пояснимо це на прикладі трьох блоків: 34 і 29, 29 і 4, 4 і 15. Якщо зібрати спочатку 2 і 3 блок, а потім приєднати зібране до першого, то потрібно 29 * 15 + 34 * 15 = 435 + 510 = 945 операцій . Якщо спочатку зібрати блок з 1 і 2 вихідних блоків, а потім приєднати 3 блок, то потрібно 344+34*15=136+510=646 операцій.Потрібно написати програму, яка знайде мінімальну кількість технологічних операцій виготовлення виробу.
</p>
<h3>Вхідні дані</h3>
<p>Вхідний файл INPUT.TXT містить у першому рядку число n – кількість блоків (1 ≤ n ≤ 100). Наступні n рядків містять пари чисел (розділених пропуском) – технологічні параметри блоків. Технологічні параметри - цілі невід'ємні числа, що не перевищують 100.</p>
<h3>Вихідні дані</h3>
<p>Вихідний текстовий файл OUTPUT.TXT повинен містити одне число – мінімальне число технологічних операцій.</p>
<hr />

<form method="post">
    <label for="input">Input File Path:</label>
    <input type="text" id="input" name="input" required>
    <br>
    <label for="output">Output File Path:</label>
    <input type="text" id="output" name="output" required>
    <br>
    <button type="submit">Run</button>
</form>

@if (ViewBag.Result != null)
{
<h3>Output:</h3>
<pre>@ViewBag.Result</pre>
}
